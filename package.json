{
  "private": true,
  "version": "0.5.3",
  "scripts": {
    "dev": "git config commit.template commit.template; npm run check-updates; next dev",
    "dev:ip": "read -p '접근할 IP 주소를 입력하세요: ' ip_address; echo 'ip로 접근하기 위해서는 supabase auth url configuration에 IP가 화이트리스트로 처리되어 있어야 합니다.'; git config commit.template commit.template; npm run check-updates; next -H $ip_address",
    "dev:ip:https": "read -p '접근할 IP 주소를 입력하세요: ' ip_address; echo 'ip로 접근하기 위해서는 supabase auth url configuration에 IP가 화이트리스트로 처리되어 있어야 합니다.'; git config commit.template commit.template; npm run check-updates; next -H $ip_address --experimental-https",
    "dev:inspect": "git config commit.template commit.template; npm run check-updates; NODE_OPTIONS=--inspect next dev",
    "dev:inspect-brk": "git config commit.template commit.template; npm run check-updates; NODE_OPTIONS=--inspect-brk next dev",
    "build": "next build",
    "build:inspect": "NODE_OPTIONS=--inspect next build",
    "build:inspect-brk": "NODE_OPTIONS=--inspect-brk next build",
    "test:api": "node test/api.js",
    "analyze": "ANALYZE=true next build",
    "memory": "next build --experimental-debug-memory-usage",
    "heap": "node --heap-prof node_modules/next/dist/bin/next build",
    "start": "next start",
    "supabase-generate-database-types": "read -p 'Enter your project id: ' id && npx supabase gen types typescript --project-id $id --schema public > database.types.ts",
    "supabase-link": "read -p 'Enter your project ref: ' ref && npx supabase link --project-ref $ref",
    "supabase-create-seed-from-local-db": "npx supabase db dump --data-only --db-url postgresql://postgres:postgres@localhost:54322/postgres > supabase/seed.sql",
    "supabase-create-migration-from-local-db": "echo '이 명령은 로컬 데이터베이스와 마이그레이션 파일 간의 차이를 비교하고 SQL 마이그레이션 스크립트를 생성합니다. \n\n테이블의 컬럼을 수정한 경우 절대로 이 기능을 이용하면 안됩니다. 이전 컬럼을 삭제한 후에 다시 생성하기 때문에 데이터가 유실됩니다.\n'; read -p '계속 진행하시겠습니까? (y/n): \n' yn; if [[ $yn == 'y' ]]; then read -p '마이그레이션 이름을 입력하세요(필수): ' migName; if [[ -z $migName ]]; then npx supabase db diff -f; else npx supabase db diff -f $migName; fi; echo '이후에 할 일 : \n(옵션)로컬 db 히스토리를 마이그레이션 파일과 동일하게 업데이트하려면 `npx supabase db reset`을 실행하세요.'; echo '(필수)마이그레이션 파일의 내용을 확인 후 커밋하세요'; echo '(옵션)원격 db와 로컬 db를 비교하려면 npx supabase migration list를 실행하세요.'; echo '(필수)원격 db에 마이그레이션을 적용하려면 `npx supabase db push`를 실행하세요.'; fi",
    "supabase-create-to-local-migration-and-dump-from-remote-db": "echo '이 명령을 실행하면 원격 디비와 지역 디비의 차이점을 비교해서 지역 디비에 적용할 수 있는 alter sql을 생성하고 이를 마이그레이션 스크립트로 생성합니다. 이를 지역 데이터베이스에 적용해서 원격과 지역을 동기화합니다. 그 후에 supabase/dump.sql을 생성한다.'; read -p '계속하시겠습니까? (y/n): ' yn; if [[ $yn == 'y' ]]; then supabase db pull; supabase db dump > supabase/dump.sql; fi",
    "supabase-local-dump": "npx supabase db dump --local > supabase/dump.sql",
    "ngrok": "npx ngrok http 3000",
    "ngrok:ip": "read -p '접근할 IP 주소를 입력하세요: ' ip_address; ngrok http $ip_address:3000",
    "tunnel": "read -p 'port?:' port; npx cloudflared tunnel --url http://localhost:$port",
    "vitest": "vitest --watch",
    "deploy": "git checkout dev && yes | npx vercel deploy --yes --with-cache --regions icn && say '디플로이먼트 성공 우하하' || say '시련은 있지만 실패는 없다.'",
    "deploy_real": "git checkout main && git merge --no-ff dev && date=$(date '+%Y%m%d-%H%M%S') && git tag v$date && git push --tags && npx vercel --yes --prod && say '디플로이먼트 성공 우하하' && git checkout dev || say '시련은 있지만 실패는 없다.'",
    "prettier": "prettier --write .",
    "prettier:check": "prettier --check .",
    "check-updates": "ncu --cache --cacheExpiration 1440 --concurrency 100",
    "update-patch": "ncu --target patch -u && npm i && npm run build && npm run dev",
    "update-minor": "ncu --target minor -u && npm i && npm run build && npm run dev"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@headlessui/react": "^2.2.0",
    "@heroicons/react": "^2.2.0",
    "@intercom/messenger-js-sdk": "^0.0.14",
    "@mui/icons-material": "^6.3.0",
    "@mui/material": "^6.3.0",
    "@mui/x-data-grid": "^7.23.5",
    "@next/third-parties": "^14.2.22",
    "@nozbe/watermelondb": "^0.27.1",
    "@portone/browser-sdk": "^0.0.11",
    "@revenuecat/purchases-js": "^0.15.1",
    "@sentry/nextjs": "^8.50.0",
    "@serwist/next": "^9.0.11",
    "@supabase/sentry-js-integration": "^0.3.0",
    "@supabase/ssr": "^0.5.2",
    "@supabase/supabase-js": "^2.47.10",
    "@uploadcare/file-uploader": "^1.11.3",
    "@uploadcare/react-uploader": "^1.3.0",
    "@vercel/flags": "^2.6.3",
    "@vercel/speed-insights": "^1.1.0",
    "ai": "^2.2.37",
    "cheerio": "1.0.0",
    "clipboard-copy": "^4.0.1",
    "cookie": "^1.0.2",
    "dayjs": "^1.11.13",
    "debug": "^4.4.0",
    "diff": "^7.0.0",
    "dompurify": "^3.2.3",
    "escape-html": "^1.0.3",
    "file-saver": "^2.0.5",
    "html-to-text": "^9.0.5",
    "jotai": "^2.11.0",
    "jotai-immer": "^0.4.1",
    "js-base64": "^3.7.7",
    "js-tiktoken": "^1.0.16",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "langchain": "^0.3.8",
    "lightbox.js-react": "^1.2.4",
    "lodash": "^4.17.21",
    "next": "14.2.22",
    "next-intl": "^3.26.3",
    "openai": "^4.77.0",
    "p-map": "^7.0.3",
    "pg": "^8.13.1",
    "postgres": "^3.4.5",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-infinite-scroll-hook": "^5.0.1",
    "react-masonry-css": "^1.0.16",
    "ulid": "^2.3.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@builder.io/partytown": "^0.10.3",
    "@next/bundle-analyzer": "^14.2.22",
    "@playwright/test": "^1.49.1",
    "@types/file-saver": "^2.0.7",
    "@types/lodash": "^4.17.13",
    "@types/node": "^22.10.2",
    "@types/react": "18.3.18",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/ui": "^2.1.8",
    "autoprefixer": "^10.4.20",
    "chalk": "^5.4.1",
    "dotenv": "^16.4.7",
    "jotai-devtools": "^0.10.1",
    "jsdom": "^25.0.1",
    "node-loader": "^2.1.0",
    "npm-check-updates": "^17.1.12",
    "pgmock": "^1.0.3",
    "prettier": "3.4.2",
    "serwist": "^9.0.11",
    "supabase": "^2.1.4",
    "tailwindcss": "^3.4.17",
    "typescript": "5.7.2",
    "vitest": "^2.1.8"
  }
}
